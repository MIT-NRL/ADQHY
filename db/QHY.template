
######################################################################
#
# Template file for the QHY areaDetector driver.
#
# Greg Guyotte
# March 4, 2021
#
# Macros:
# P,R - Base PV name
# PORT - Asyn port name
# ADDR - Asyn address (set to zero)
# TIMEOUT - Asyn timeout
#
#
######################################################################

include "ADBase.template"

# Binning or readout mode
record(mbbo, "$(P)$(R)ReadoutMode")
{
    field(DTYP,"asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_READOUT_MODE")
    field(ZRST, "1x1")
    field(ZRVL, "1")
    field(ONST, "2x2")
    field(ONVL, "2")
    field(TWST, "3x3")
    field(TWVL, "3")
    field(THST, "4x4")
    field(THVL, "4")
    field(PINI,"YES")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)ReadoutMode_RBV")
{
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_READOUT_MODE")
    field(ZRST, "1x1")
    field(ZRVL, "1")
    field(ONST, "2x2")
    field(ONVL, "2")
    field(TWST, "3x3")
    field(TWVL, "3")
    field(THST, "4x4")
    field(THVL, "4")
    field(SCAN, "I/O Intr")
}

# /// camera acquisition mode
record(mbbo, "$(P)$(R)ReadMode")
{
    field(DTYP,"asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_READ_MODE")
    field(ZRST, "Photographic DS0 16BIT")
    field(ZRVL, "0")
    field(ONST, "High Gain Mode 16BIT")
    field(ONVL, "1")
    field(TWST, "Extend Fullwell Mode")
    field(TWVL, "2")
    field(THST, "Extend Fullwell 2CMS")
    field(THVL, "3")
    field(FRST, "14 bit mode")
    field(FRVL, "4")
    field(PINI,"YES")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)ReadMode_RBV")
{
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_READ_MODE")
    field(ZRST, "Photographic DS0 16BIT")
    field(ZRVL, "0")
    field(ONST, "High Gain Mode 16BIT")
    field(ONVL, "1")
    field(TWST, "Extend Fullwell Mode")
    field(TWVL, "2")
    field(THST, "Extend Fullwell 2CMS")
    field(THVL, "3")
    field(FRST, "14 bit mode")
    field(FRVL, "4")
    field(SCAN,"I/O Intr")
}

record(mbbo, "$(P)$(R)BitDepth")
{
    field(DTYP,"asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_BIT_DEPTH")
    field(ZRST, "8 bit")
    field(ZRVL, "8")
    field(ONST, "16 bit")
    field(ONVL, "16")
    field(TWST, "32 bit")
    field(TWVL, "32")
    field(PINI,"YES")
    info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)BitDepth_RBV")
{
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_BIT_DEPTH")
    field(ZRST, "8 bit")
    field(ZRVL, "8")
    field(ONST, "16 bit")
    field(ONVL, "16")
    field(TWST, "32 bit")
    field(TWVL, "32")
    field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)Offset")
{
    field(DTYP,"asynInt32")
    field(OUT, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_OFFSET")
    field(PINI,"YES")
    field(VAL, "0")
    info(autosaveFields, "VAL")
}

record(longin, "$(P)$(R)Offset_RBV")
{
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_OFFSET")
    field(SCAN, "I/O Intr")
}


#/// Read back the calculated acquisition percent complete (exposure + readout).
#/// This is read from the SBIG class library when we are acquiring.
record(ai, "$(P)$(R)PercentComplete_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_PERCENT_COMPLETE")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
   field(EGU, "%")
}


#/// Read back the calculated acquisition percent complete (exposure + readout).
#/// This is read from the SBIG class library when we are acquiring.
record(ai, "$(P)$(R)PercentComplete_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_PERCENT_COMPLETE")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
   field(EGU, "%")
}

# ///
# /// Read back the cooler power
# ///
record(ai, "$(P)$(R)TEPower_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))QHY_TEMP_POWER")
   field(PREC, "1")
   field(SCAN, "I/O Intr")
   field(EGU, "%")
}




